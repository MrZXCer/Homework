<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="database.data.MainMapper">

    <sql id="isPlanActivated">
        (@time >= userplan.activateTime and (ISNULL(userplan.deactivateTime) or userplan.deactivateTime > @time))
    </sql>

    <select id="getPlan" resultType="Plan">
        select * from plan
        where id = #{planId};
    </select>

    <sql id="first, today, last">
        set @time = #{datetime};
        set @firstSecondOfMonth = convert(last_day(@time - interval 1 month), DATETIME);
        set @lastSecondOfMonth = last_day(@time) + interval 1 day - interval 1 second;

    </sql>

    <select id="getAllPlans" resultType="Plan">
      select * from plan;
    </select>

    <select id="getActivePlans" resultType="Plan">
        set @time = #{datetime};
        select plan.* from plan, userplan
        where userplan.userId = #{userId} and plan.id = userplan.planId and <include refid="isPlanActivated"/>;
    </select>

    <select id="orderPlan" resultType="int">
        set @now = NOW();

        insert into userplantransaction(userId, planId, time, action)
        values (#{userId}, #{planId}, @now,
        <choose>
            <when test="activateImmediately">
                'ORDER_IMMEDIATELY'
            </when>
            <otherwise>
                'ORDER_NEXT_MONTH'
            </otherwise>
        </choose>
        );

        set @transactionId = last_insert_id();

        insert into userplan(transactionId, userId, planId, activateTime, orderTime)
        values (@transactionId, #{userId}, #{planId},
        <choose>
            <when test="activateImmediately">
                @now
            </when>
            <otherwise>
                adddate(last_day(@now), 1)
            </otherwise>
        </choose>,
        @now);



        select @transactionId;


    </select>
    <select id="cancelPlan" >
        set @now = NOW();

        select userId, planId into @userId, @id from userplantransaction
        where transactionId=#{transactionId};

        insert into userplantransaction(userId, planId, time, action)
        values (@userId, @id, @now,
        <choose>
            <when test="activateImmediately">
                'CANCEL_IMMEDIATELY'
            </when>
            <otherwise>
                'CANCEL_NEXT_MONTH'
            </otherwise>
        </choose>
        );

        update userplan set deactivateTime =
        <choose>
          <when test="activateImmediately">
            @now
          </when>
          <otherwise>
            adddate(last_day(@now), 1)
          </otherwise>
        </choose>
        where transactionId=#{transactionId};

    </select>


    <sql id="insideTheMonth">
        between @firstDayOfMonth and @firstDayOfNextMonth
    </sql>

    <sql id="fromStartToNow">
        between @firstDayOfMonth and @time;
    </sql>


    <sql id="getUsages">
        <include refid="first, today, last"/>
        select * from `usage`
        where userId = #{userId} and serviceType = #{serviceType} and startTime <include refid="fromStartToNow"/>
        order by startTime;

    </sql>

    <sql id="returnsUsage">
        select @limit as `limit`, @total as `total`;
    </sql>

    <select id="getBasicCost" resultType="BasicCost">
        select basicCostId into @basicCostId from user where id = #{userId};
        select * from basiccost where id = @basicCostId;
    </select>

    <select id="getUser" resultType="User">
        select * from user where id = #{userId};
    </select>

</mapper>